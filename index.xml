<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Yuvaraj Kesavan Blog</title><link>https://yuvaraj0615.github.io/demoweb/</link><description>Recent content on Yuvaraj Kesavan Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://yuvaraj0615.github.io/demoweb/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic HTML Elements</title><link>https://yuvaraj0615.github.io/demoweb/post/my-first-post/</link><pubDate>Mon, 16 Apr 2018 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/post/my-first-post/</guid><description>&lt;p>The main purpose of this article is to make sure that all basic HTML Elements are decorated with CSS so as to not miss any possible elements when creating new themes for Hugo.&lt;/p></description></item><item><title>(Hu)go Template Primer</title><link>https://yuvaraj0615.github.io/demoweb/post/my-third-post/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/post/my-third-post/</guid><description>&lt;p>Hugo uses the excellent &lt;a href="https://golang.org/">Go&lt;/a> &lt;a href="https://golang.org/pkg/html/template/">html/template&lt;/a> library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in Go templates.&lt;/p></description></item><item><title>Creating a New Theme</title><link>https://yuvaraj0615.github.io/demoweb/post/my-second-post/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/post/my-second-post/</guid><description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>About Hugo</title><link>https://yuvaraj0615.github.io/demoweb/about/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/about/</guid><description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
Cobra Viper J Walter Weatherman Cast Learn more and contribute on GitHub.
Setup Some fun facts about Hugo:
Built in Go Loosely inspired by Jekyll Primarily developed by spf13 on the train while commuting to and from Manhattan. Coded in Vim using spf13-vim Have questions or suggestions?</description></item><item><title>Getting Started with Hugo</title><link>https://yuvaraj0615.github.io/demoweb/post/my-fourth-post/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/post/my-fourth-post/</guid><description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://yuvaraj0615.github.io/demoweb/post/my-fifth-post/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://yuvaraj0615.github.io/demoweb/post/my-fifth-post/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item></channel></rss>